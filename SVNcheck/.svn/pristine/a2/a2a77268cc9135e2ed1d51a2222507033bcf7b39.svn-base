package com.tygas.tianyu.tianyu.service;

import android.app.Notification;
import android.app.NotificationManager;
import android.app.ProgressDialog;
import android.app.Service;
import android.content.Context;
import android.content.Intent;
import android.net.Uri;
import android.os.Environment;
import android.os.IBinder;
import android.util.Log;
import android.widget.RemoteViews;

import com.lidroid.xutils.exception.HttpException;
import com.lidroid.xutils.http.ResponseInfo;
import com.lidroid.xutils.http.callback.RequestCallBack;
import com.tygas.tianyu.tianyu.R;
import com.tygas.tianyu.tianyu.utils.HttpUtilsHelper;

import java.io.File;
import java.text.DecimalFormat;

public class UpVersonService extends Service {
    public UpVersonService() {
    }

    @Override
    public IBinder onBind(Intent intent) {
        // TODO: Return the communication channel to the service.
        throw new UnsupportedOperationException("Not yet implemented");
    }

    private String app_name;
    private static String down_url;
    private int notification_id = 0;

    @Override
    public int onStartCommand(Intent intent, int flags, int startId) {
        if (intent != null) {
            try {
                app_name = intent.getStringExtra("app_name");
                down_url = intent.getStringExtra("downurl");
                // 创建通知
                createNotification();
                // 开始下载
                down(down_url, app_name);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        return super.onStartCommand(intent, flags, startId);
    }

    RemoteViews contentView;
    private NotificationManager notificationManager;
    private Notification notification;

    public void createNotification() {

        notificationManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);
        notification = new Notification();
        notification.icon = R.mipmap.app_icon;
        // 这个参数是通知提示闪出来的值.
        notification.tickerText = "开始下载";

        // pendingIntent = PendingIntent.getActivity(this, 0, updateIntent, 0);

        // 这里面的参数是通知栏view显示的内容
        //  notification.setLatestEventInfo(this, app_name, "下载：0%", pendingIntent);

        // notificationManager.notify(notification_id, notification);

        /***
         * 在这里我们用自定的view来显示Notification
         */
        contentView = new RemoteViews(getPackageName(), R.layout.notification_item);
        contentView.setTextViewText(R.id.notificationTitle, "正在下载");
        contentView.setTextViewText(R.id.notificationPercent, "0%");
        contentView.setProgressBar(R.id.notificationProgress, 100, 0, false);

        notification.contentView = contentView;
        notificationManager.notify(notification_id, notification);
    }

    private File file;

    // 进行下载
    public void down(String url, String app_name) {


        String str = "/ " + app_name + ".apk";
        String fileName = null;

        boolean sdCardExist = Environment.getExternalStorageState()
                .equals(Environment.MEDIA_MOUNTED);   //判断sd卡是否存在
        if (sdCardExist) {
            fileName = Environment.getExternalStorageDirectory() + str;
            file = new File(fileName);//获取跟目录
            HttpUtilsHelper.httpUtils_updata.download(url, fileName,
                    true, true, new RequestCallBack<File>() {
                        @Override
                        public void onSuccess(ResponseInfo<File> arg0) {
                            // TODO Auto-generated method stub
                            notification.contentView.setTextViewText(R.id.notificationTitle, "下载完成");
                            notificationManager.notify(notification_id, notification);
                            Uri uri = Uri.fromFile(file);
                            String type = getMIMEType(file);
                            Intent intent = new Intent("android.intent.action.VIEW");
                            intent.addCategory("android.intent.category.DEFAULT");
                            intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
                            intent.setDataAndType(uri, type);
                            startActivity(intent);
                            // file.delete();
                            stopSelf();
                        }


                        @Override
                        public void onLoading(long total, long current,
                                              boolean isUploading) {
                            double x_double = current * 1.0;
                            double tempresult = x_double / total;
                            DecimalFormat df1 = new DecimalFormat("0.00"); // ##.00%
                            // 百分比格式，后面不足2位的用0补齐
                            String result = df1.format(tempresult);
                            contentView.setTextViewText(R.id.notificationPercent, (int) (Float.parseFloat(result) * 100) + "%");
                            contentView.setProgressBar(R.id.notificationProgress, 100, (int) (Float.parseFloat(result) * 100), false);
                            notificationManager.notify(notification_id, notification);
                            super.onLoading(total, current, isUploading);
                        }

                        @Override
                        public void onStart() {
                            super.onStart();
                            notification.contentView.setTextViewText(R.id.notificationTitle, "准备下载");
                            notification.contentView.setProgressBar(R.id.notificationProgress, 100, 0, false);
                            notificationManager.notify(notification_id, notification);
                        }

                        @Override
                        public void onFailure(HttpException arg0, String arg1) {
                            Log.d("onFailure", arg1 + arg0.getMessage());
                            // TODO Auto-generated method stub
                            notification.contentView.setTextViewText(R.id.notificationTitle, "下载失败");
                            notificationManager.notify(notification_id, notification);
                            stopSelf();
                        }
                    });
        }
    }


    public static String getMIMEType(File f) {
        String type = "";
        String fName = f.getName();
        // 取得扩展名
        String end = fName
                .substring(fName.lastIndexOf(".") + 1, fName.length());
        if (end.equals("apk")) {
            type = "application/vnd.android.package-archive";
        } else {
            // /*如果无法直接打开，就跳出软件列表给用户选择 */
            type = "*/*";
        }
        return type;
    }
}
