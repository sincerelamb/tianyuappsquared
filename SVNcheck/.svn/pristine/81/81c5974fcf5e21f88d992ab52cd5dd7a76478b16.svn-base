package com.tygas.tianyu.tianyu.ui.view.activity;

import android.app.Activity;
import android.app.Application;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.support.v4.widget.SwipeRefreshLayout;
import android.support.v7.widget.LinearLayoutManager;
import android.text.TextUtils;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.widget.ImageView;
import android.widget.Toast;

import com.lidroid.xutils.HttpUtils;
import com.lidroid.xutils.exception.HttpException;
import com.lidroid.xutils.http.ResponseInfo;
import com.lidroid.xutils.http.callback.RequestCallBack;
import com.lidroid.xutils.http.client.HttpRequest;
import com.marshalchen.ultimaterecyclerview.ObservableScrollState;
import com.marshalchen.ultimaterecyclerview.ObservableScrollViewCallbacks;
import com.marshalchen.ultimaterecyclerview.UltimateRecyclerView;
import com.tygas.tianyu.tianyu.R;
import com.tygas.tianyu.tianyu.context.MyAppCollection;
import com.tygas.tianyu.tianyu.data.UrlData;
import com.tygas.tianyu.tianyu.ui.adapter.CpCustomUltiRecycleAdapter;
import com.tygas.tianyu.tianyu.ui.model.CpCustomer;
import com.tygas.tianyu.tianyu.ui.model.User;
import com.tygas.tianyu.tianyu.utils.HttpUtilsHelper;
import com.tygas.tianyu.tianyu.utils.JsonParser;
import com.tygas.tianyu.tianyu.utils.MyDateUtils;
import com.tygas.tianyu.tianyu.utils.ProgressDialogHelper;
import com.tygas.tianyu.tianyu.utils.SystemBarUtils;
import com.tygas.tianyu.tianyu.utils.XutilsRequest;

import java.io.BufferedReader;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.EventListener;
import java.util.List;

public class CpCustomActivity extends Activity implements SwipeRefreshLayout.OnRefreshListener, UltimateRecyclerView.OnLoadMoreListener, View.OnClickListener {


    private ImageView backImageView;//返回按钮
    private ImageView nodata;
    private UltimateRecyclerView ultimateRecyclerView;
    private CpCustomUltiRecycleAdapter adapter;
    private final int PAGESIZE = 10;
    private int pageindex = 1;
    private List<CpCustomer> cpList = new ArrayList<CpCustomer>();
    private final int DOWN = 1;
    private final int UP = 2;

    private String starttime;
    private String endtime;
    private String customername;
    private String customerphone;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        SystemBarUtils.setSystemBarColor(this, "#327ECA");
        setContentView(R.layout.activity_cp_custom);
        initDate();

        initView();
    }

    private void initView() {
        nodata = (ImageView) findViewById(R.id.activity_cpcustom_iv_nodata);
        backImageView = (ImageView) findViewById(R.id.activtiy_cpcustomers_back);
        backImageView.setOnClickListener(this);
        ultimateRecyclerView = (UltimateRecyclerView) findViewById(R.id.activity_cpcustom_ulry_cplist);
        ultimateRecyclerView.setLayoutManager(new LinearLayoutManager(this));
        ultimateRecyclerView.enableLoadmore();
        ultimateRecyclerView.setHasFixedSize(false);
        adapter = new CpCustomUltiRecycleAdapter(this, cpList);
        ultimateRecyclerView.setAdapter(adapter);
        //  ultimateRecyclerView.reenableLoadmore();
        ultimateRecyclerView.setOnLoadMoreListener(this);
        ultimateRecyclerView.setDefaultOnRefreshListener(this);

        ultimateRecyclerView.setScrollViewCallbacks(new ObservableScrollViewCallbacks() {
            @Override
            public void onScrollChanged(int scrollY, boolean firstScroll, boolean dragging) {

            }

            @Override
            public void onDownMotionEvent() {

            }

            @Override
            public void onUpOrCancelMotionEvent(ObservableScrollState observableScrollState) {
//                if (observableScrollState == ObservableScrollState.UP) {
//                    Toast.makeText(CpCustomActivity.this, "Up", Toast.LENGTH_SHORT).show();
//                } else if (observableScrollState == ObservableScrollState.DOWN) {
//                    Toast.makeText(CpCustomActivity.this, "Down", Toast.LENGTH_SHORT).show();
//                }
            }
        });

        ultimateRecyclerView.post(new Runnable() {
            @Override
            public void run() {
                ultimateRecyclerView.setRefreshing(true);
            }
        });
        onRefresh();

    }

    private void downLoadData(final int type, int index) {
        MyAppCollection applicationContext = (MyAppCollection) getApplicationContext();
        User user = applicationContext.getUser();

        Log.d("userId", user.getEmpId() + "----------");
        HttpUtilsHelper.httpUtils.send(HttpRequest.HttpMethod.POST, UrlData.PCINFOLIST_URL, XutilsRequest.getCpCustomerList(user.getEmpId(), customername, customerphone, starttime, endtime, index, PAGESIZE),
                new RequestCallBack<String>() {
                    @Override
                    public void onSuccess(ResponseInfo<String> objectResponseInfo) {

                        Log.d("cpresult", objectResponseInfo.result);
                        List<CpCustomer> cpCustomerList = JsonParser.cpCustomersParser(objectResponseInfo.result);
                        Log.d("cpresultList", cpCustomerList.toString());
                        switch (type) {
                            case 1:
                                ultimateRecyclerView.post(new Runnable() {
                                    @Override
                                    public void run() {
                                        ultimateRecyclerView.setRefreshing(false);
                                    }
                                });
                                cpList.clear();
                                cpList.addAll(cpCustomerList);
                                ultimateRecyclerView.enableLoadmore();
                                break;
                            case 2:
                                if (cpCustomerList.size() == 0) {
                                    pageindex--;
                                    Toast.makeText(CpCustomActivity.this, "没有更多数据了", Toast.LENGTH_SHORT).show();
                                    ultimateRecyclerView.disableLoadmore();
                                }
                                cpList.addAll(cpCustomerList);
                                break;
                        }
                        adapter.notifyDataSetChanged();
                        if (cpList.size() > 0) {
                            nodata.setVisibility(View.GONE);
                        } else {
                            nodata.setVisibility(View.VISIBLE);
                        }
                    }

                    @Override
                    public void onFailure(HttpException e, String s) {
                        Toast.makeText(CpCustomActivity.this, "网络请求出错，请检查网络", Toast.LENGTH_SHORT).show();
                        switch (type) {
                            case 1:
                                ultimateRecyclerView.post(new Runnable() {
                                    @Override
                                    public void run() {
                                        ultimateRecyclerView.setRefreshing(false);
                                    }
                                });
                                break;
                            case 2:
                                pageindex--;
                                break;
                        }
                    }
                });
    }

    private void initDate() {
        Calendar now = Calendar.getInstance();
        String nowStr = now.get(Calendar.YEAR) + "-" + (now.get(Calendar.MONTH) + 1) + "-" + now.get(Calendar.DAY_OF_MONTH);
        starttime = nowStr;
        endtime = nowStr;
    }

    @Override
    public void onRefresh() {
        Toast.makeText(CpCustomActivity.this, "下拉了", Toast.LENGTH_SHORT).show();
        pageindex = 1;
        downLoadData(DOWN, pageindex);
    }

    @Override
    public void loadMore(int itemsCount, int maxLastVisiblePosition) {
        Toast.makeText(CpCustomActivity.this, "LoadMore", Toast.LENGTH_SHORT).show();
        pageindex++;
        downLoadData(UP, pageindex);
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()) {
            case R.id.activtiy_cpcustomers_back://点击了返回按钮
                finish();
                break;
            case R.id.activtiy_cpcustomers_select:
                Intent intent = new Intent(this, CpCustomerScreenActivity.class);
                startActivityForResult(intent, 0);
                break;
        }
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if (requestCode == 0 && resultCode == RESULT_OK) {
            customername = data.getStringExtra("name");
            customerphone = data.getStringExtra("phone");
            starttime = data.getStringExtra("fromtime");
            endtime = data.getStringExtra("totime");
            ultimateRecyclerView.post(new Runnable() {
                @Override
                public void run() {
                    ultimateRecyclerView.setRefreshing(true);
                }
            });
            onRefresh();
        }
    }
}
