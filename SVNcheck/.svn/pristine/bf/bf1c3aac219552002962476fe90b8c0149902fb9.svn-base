package com.tygas.tianyu.tianyu.ui.view.activity;

import android.app.Activity;
import android.app.ProgressDialog;
import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.os.Environment;
import android.util.Log;
import android.view.View;
import android.widget.ImageView;
import android.widget.LinearLayout;

import com.lidroid.xutils.DbUtils;
import com.lidroid.xutils.HttpUtils;
import com.lidroid.xutils.exception.DbException;
import com.lidroid.xutils.exception.HttpException;
import com.lidroid.xutils.http.ResponseInfo;
import com.lidroid.xutils.http.callback.RequestCallBack;
import com.lidroid.xutils.http.client.HttpRequest;
import com.tygas.tianyu.tianyu.R;
import com.tygas.tianyu.tianyu.context.MyAppCollection;
import com.tygas.tianyu.tianyu.data.SharedPreferencesDate;
import com.tygas.tianyu.tianyu.data.UrlData;
import com.tygas.tianyu.tianyu.ui.model.PID;
import com.tygas.tianyu.tianyu.ui.model.User;
import com.tygas.tianyu.tianyu.ui.model.UserPtInfoModel;
import com.tygas.tianyu.tianyu.utils.DbUtilsHelper;
import com.tygas.tianyu.tianyu.utils.HttpUtilsHelper;
import com.tygas.tianyu.tianyu.utils.SystemBarUtils;
import com.tygas.tianyu.tianyu.utils.XutilsRequest;

import java.io.File;
import java.util.List;


public class MainActivity extends Activity {

    private ImageView iv_ptcustomers;
    private ImageView iv_clue;
    private ImageView iv_cpcustomers;

    private static final String PT_LIST = "AndroidApp_search_customer";
    private static final String CLUE_LIST = "AndroidApp_search_clue";
    private static final String CP_LIST = "AndroidApp_search_customer_list";

    private DbUtils dbUtils;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        SystemBarUtils.setSystemBarColor(this, "#327ECA");
        setContentView(R.layout.activity_main);
        dbUtils = DbUtilsHelper.newInstance(this);
        initView();
        //   getUrlPackageCode();
        getUrlPackageCode();

    }

    private void initView() {
        iv_ptcustomers = (ImageView) findViewById(R.id.activity_main_iv_ptcustomers);
        iv_clue = (ImageView) findViewById(R.id.activity_main_iv_clue);
        iv_cpcustomers = (ImageView) findViewById(R.id.activity_main_iv_cp);

        try {
            List<PID> list_pid = dbUtils.findAll(PID.class);
            Log.d("adadada", list_pid.toString());
            for (PID pid : list_pid) {
                switch (pid.getFormID()) {
                    case PT_LIST:
                        iv_ptcustomers.setVisibility(View.VISIBLE);
                        break;
                    case CLUE_LIST:
                        iv_clue.setVisibility(View.VISIBLE);
                        break;
                    case CP_LIST:
                        iv_cpcustomers.setVisibility(View.VISIBLE);
                        break;
                }
            }
        } catch (DbException e) {
            e.printStackTrace();
        }


    }

    public void listOnclick(View view) {
        switch (view.getId()) {
            case R.id.activity_main_iv_ptcustomers:
                Intent intent = new Intent(MainActivity.this, PtCustomersActivity.class);
                startActivity(intent);
                break;
            case R.id.activity_main_iv_cp:
                Intent intent_cp = new Intent(MainActivity.this, CpCustomActivity.class);
                startActivity(intent_cp);
                break;

            case R.id.activity_main_tv_exit:
                Intent intent_login = new Intent(MainActivity.this, LoginActivity.class);
                startActivity(intent_login);
                getSharedPreferences(SharedPreferencesDate.SHAREDPREFERENCES_NAME_USERINFO, MODE_PRIVATE).edit().putBoolean(SharedPreferencesDate.ISLOGIN, false).commit();
                try {
                    dbUtils.deleteAll(User.class);
                    dbUtils.deleteAll(UserPtInfoModel.class);
                    dbUtils.deleteAll(PID.class);
                } catch (DbException e) {
                    e.printStackTrace();
                }

                finish();
                break;
        }
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();

    }

    public static final String URL = "http://music.baidu.com/cms/BaiduMusic-danqu.apk";

    // 进行下载
    public void down() {
        final ProgressDialog progressDialog = new ProgressDialog(this);
        progressDialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);
        progressDialog.setCanceledOnTouchOutside(false);
        progressDialog.setMessage("准备下载...");
        progressDialog.show();

        String str = "/eec.apk";
        String fileName = null;
        File file = null;
        boolean sdCardExist = Environment.getExternalStorageState()
                .equals(Environment.MEDIA_MOUNTED);   //判断sd卡是否存在
        if (sdCardExist) {
            fileName = Environment.getExternalStorageDirectory() + str;
            file = new File(fileName);//获取跟目录
        }

        final File finalFile = file;
        HttpUtilsHelper.httpUtils_updata.download(URL, fileName,
                true, true, new RequestCallBack<File>() {
                    @Override
                    public void onSuccess(ResponseInfo<File> arg0) {
                        // TODO Auto-generated method stub
                        progressDialog.dismiss();
                        Intent intent = new Intent(Intent.ACTION_VIEW);
                        intent.setDataAndType(Uri.fromFile(finalFile), "application/vnd.android.package-archive");
                        startActivity(intent);

                    }


                    @Override
                    public void onLoading(long total, long current,
                                          boolean isUploading) {
                        progressDialog.setMessage("正在下载...");
                        int i = (int) (((double) current / (double) total) * 100d);
                        if (total > current) {
                            progressDialog.setProgress(i);
                        } else {
                            progressDialog.setMessage("下载完成");
                        }
                        super.onLoading(total, current, isUploading);
                    }

                    @Override
                    public void onStart() {
                        super.onStart();
                        progressDialog.setMessage("准备下载...");
                    }

                    @Override
                    public void onFailure(HttpException arg0, String arg1) {
                        Log.d("onFailure", arg1 + arg0.getMessage());
                        // TODO Auto-generated method stub
                        progressDialog.dismiss();
                        progressDialog.setMessage("下载失败");
                        finish();
                    }
                });

    }

    private void getUrlPackageCode() {
        HttpUtilsHelper.httpUtils_updata.send(HttpRequest.HttpMethod.POST, UrlData.VERSON_URL, XutilsRequest.getVersonCode(), new RequestCallBack<Object>() {
            @Override
            public void onSuccess(ResponseInfo<Object> responseInfo) {
                Log.i("veron", responseInfo.result.toString());

            }

            @Override
            public void onFailure(HttpException e, String s) {
                Log.i("veron", s);
            }
        });
    }


}
