package com.tygas.tianyu.tianyu.ui.view.activity;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.text.Editable;
import android.text.TextUtils;
import android.text.TextWatcher;
import android.util.Log;
import android.view.View;
import android.view.WindowManager;
import android.view.inputmethod.InputMethodManager;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import com.lidroid.xutils.HttpUtils;
import com.lidroid.xutils.exception.HttpException;
import com.lidroid.xutils.http.ResponseInfo;
import com.lidroid.xutils.http.callback.RequestCallBack;
import com.lidroid.xutils.http.client.HttpRequest;
import com.tygas.tianyu.tianyu.R;
import com.tygas.tianyu.tianyu.context.MyAppCollection;
import com.tygas.tianyu.tianyu.data.SharedPreferencesDate;
import com.tygas.tianyu.tianyu.data.UrlData;
import com.tygas.tianyu.tianyu.ui.model.User;
import com.tygas.tianyu.tianyu.utils.HttpUtilsHelper;
import com.tygas.tianyu.tianyu.utils.JsonParser;
import com.tygas.tianyu.tianyu.utils.ProgressDialogHelper;
import com.tygas.tianyu.tianyu.utils.SystemBarUtils;
import com.tygas.tianyu.tianyu.utils.XutilsRequest;

public class LoginActivity extends Activity {

    private EditText userName, password;
    private TextView btn_login;
    private String userNameValue, passwordValue;
    private SharedPreferences sp;
    private HttpUtils httputils;

    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        SystemBarUtils.setSystemBarColor(this, "#00000000");
        //获得实例对象
        sp = this.getSharedPreferences(SharedPreferencesDate.SHAREDPREFERENCES_NAME_USERINFO, Context.MODE_PRIVATE);
        //判断自动登陆
        if (sp.getBoolean(SharedPreferencesDate.ISLOGIN, false)) {
            Intent intent = new Intent(LoginActivity.this, MainActivity.class);
            LoginActivity.this.startActivity(intent);
            finish();
        }
        //使编辑框可见
        getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_ADJUST_PAN);
        setContentView(R.layout.activity_login);

        httputils = HttpUtilsHelper.httpUtils;
        //初始化控件
        initView();
    }


    private void initView() {
        userName = (EditText) findViewById(R.id.et_zh);
        userName.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {

            }

            //当用户名发生改变是密码清空
            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {
                password.setText("");
            }

            @Override
            public void afterTextChanged(Editable s) {

            }
        });
        password = (EditText) findViewById(R.id.et_mima);
        btn_login = (TextView) findViewById(R.id.btn_login);
        userName.setText(sp.getString("USER_NAME", ""));
        password.setText(sp.getString("PASSWORD", ""));
        // 登录监听事件
        btn_login.setOnClickListener(new View.OnClickListener() {

            public void onClick(View v) {

                userNameValue = userName.getText().toString();
                passwordValue = password.getText().toString();
                if (verificationAccountPassword(userNameValue, passwordValue)) {
                    //使软键盘消失
                    InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
                    imm.hideSoftInputFromWindow(v.getWindowToken(), 0);
                    ProgressDialogHelper.showProgressDialog(LoginActivity.this, "正在登陆...");
                    httputils.send(HttpRequest.HttpMethod.POST, UrlData.LOGIN_URL, XutilsRequest.getLoginParams(userNameValue, passwordValue), new RequestCallBack<String>() {
                        @Override
                        public void onSuccess(ResponseInfo<String> objectResponseInfo) {

                            Log.i("Loginresult", objectResponseInfo.result);
                            User user = JsonParser.loginParser(objectResponseInfo.result);
                            ((MyAppCollection) getApplicationContext()).setUser(user);
                            if (user.getIsLoginSuccess()) {
                                //存入用户设置相关数据
//                                SharedPreferences.Editor editor = sp.edit();
//                                editor.putString(SharedPreferncesData.USER_NAME, userNameValue);
//                                editor.putString(SharedPreferncesData.PASSWORD, passwordValue);
//                                editor.putString(SharedPreferncesData.USER_ID, userId);
//                                editor.putBoolean(SharedPreferncesData.ISLOGIN, true);
//                                editor.commit();
                                //跳转至主界面
                                Intent intent = new Intent(LoginActivity.this, MainActivity.class);
                                startActivity(intent);
                                finish();

                            } else {
                                Toast.makeText(LoginActivity.this, user.getLoginInformation(), Toast.LENGTH_LONG).show();
                            }
                            ProgressDialogHelper.dismissProgressDialog();
                        }

                        @Override
                        public void onFailure(HttpException e, String s) {
                            Toast.makeText(LoginActivity.this, "网络请求出错，请检查网络", Toast.LENGTH_SHORT).show();
                            ProgressDialogHelper.dismissProgressDialog();
                        }
                    });
                }

            }
        });
    }

    //设置检验账号密码方法
    private boolean verificationAccountPassword(String userNameValue, String passwordValue) {
        if (TextUtils.isEmpty(userNameValue)) {
            Toast.makeText(LoginActivity.this, "账号不能为空", Toast.LENGTH_LONG).show();
            return false;
        }
        if (TextUtils.isEmpty(passwordValue)) {
            Toast.makeText(LoginActivity.this, "密码不能为空", Toast.LENGTH_LONG).show();
            return false;
        }
        return true;
    }

    public void setUrl(View view) {
        Intent intent = new Intent(LoginActivity.this, UrlSetActivity.class);
        startActivity(intent);
    }

}