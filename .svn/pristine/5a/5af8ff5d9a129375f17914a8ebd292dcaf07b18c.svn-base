package com.tygas.tianyu.tianyu.ui.view.activity;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.support.v4.widget.SwipeRefreshLayout;
import android.support.v7.widget.LinearLayoutManager;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.widget.TextView;
import android.widget.Toast;

import com.lidroid.xutils.HttpUtils;
import com.lidroid.xutils.exception.HttpException;
import com.lidroid.xutils.http.HttpHandler;
import com.lidroid.xutils.http.RequestParams;
import com.lidroid.xutils.http.ResponseInfo;
import com.lidroid.xutils.http.callback.RequestCallBack;
import com.lidroid.xutils.http.client.HttpRequest;
import com.marshalchen.ultimaterecyclerview.UltimateRecyclerView;
import com.tygas.tianyu.tianyu.R;
import com.tygas.tianyu.tianyu.data.UrlData;
import com.tygas.tianyu.tianyu.ui.adapter.PtCustomUltiRecycleAdapter;
import com.tygas.tianyu.tianyu.ui.model.PtCustomer;
import com.tygas.tianyu.tianyu.utils.HttpUtilsHelper;
import com.tygas.tianyu.tianyu.utils.XutilsRequest;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import org.w3c.dom.Text;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;

public class PtCustomersActivity extends Activity implements View.OnClickListener,
                                                    UltimateRecyclerView.OnLoadMoreListener,
                                                    SwipeRefreshLayout.OnRefreshListener {

    private UltimateRecyclerView listRecyclerView;
    private LinearLayoutManager linearLayoutManager;
    private PtCustomUltiRecycleAdapter adapter;
    private ArrayList<PtCustomer> data;

    private TextView filterTextView;//筛选按钮

    private String name;
    private String phone;

    private String empid;
    private String begintime;
    private String endtime;

    private int pageindex;
    private int pagesize;
    private boolean haveMore;//时候有更多的数据


    private static final String LOG_TAG = "PtCustomersActivity";
    private static final int FILTER_REQUEST_CODE = 0x0001;//筛选按钮的请求码

    //private static final String PATH = "http://carbase.tian028.com/OpenService/App.aspx?type=cluelist";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_ptcustomers);
        initView();
        initData();
    }//end onCreate

    public static void startPtCustomersActivity(Context context,String empid,
                                                String clueName,String cluePhone,
                                                String isExpiry,String begintime,
                                                String endtime,String pageindex,
                                                String pageSize){
        Intent intent = new Intent();
        intent.putExtra("empid",empid);
        intent.putExtra("clueName",clueName);
        intent.putExtra("cluePhone",cluePhone);
        intent.putExtra("isExpiry",isExpiry);
        intent.putExtra("begintime",begintime);
        intent.putExtra("endtime", endtime);
        intent.putExtra("pageindex", pageindex);
        intent.putExtra("pagesize", pageSize);
        intent.setClass(context, PtCustomer.class);
        context.startService(intent);
    }//end startPtCustomersActivity


    public static void startPtCustomersActivity(Context context,String empid){
        startPtCustomersActivity(context, empid, null, null, null, null, null, null, null);
    }

    private void initData() {
        data = new ArrayList<>();
        begintime = getNowDate();//获取当前时间
        endtime = begintime;
        pageindex = 1;
        pagesize = 10;
        empid = String.valueOf(29001);//获取当前的empoid
        //getDataFromNet();
        HttpUtils httpUtils = HttpUtilsHelper.getInstance();
        RequestParams requestParams = XutilsRequest.getPcvList(empid, "", "", "",
                begintime, endtime,
                String.valueOf(pageindex), String.valueOf(pagesize));

        listRecyclerView.post(new Runnable() {
            @Override
            public void run() {
                listRecyclerView.setRefreshing(true);
            }
        });

        httpUtils.send(HttpRequest.HttpMethod.POST, UrlData.PCVLIST_URL, requestParams, new RequestCallBack<String>() {
            @Override
            public void onSuccess(ResponseInfo<String> responseInfo) {
                String result = responseInfo.result;
                Log.i(LOG_TAG,"[result]"+result);
                if(result != null && result.length() > 0){
                    parsePtCustomers(result);
                    Log.i(LOG_TAG, "[解析完的数据]" + data.size() + "  --> " + data);
                    adapter = new PtCustomUltiRecycleAdapter(data);
                    /*adapter.setCustomLoadMoreView(LayoutInflater.from(PtCustomersActivity.this)
                            .inflate(R.layout.custom_bottom_progressbar, null));*/
                    listRecyclerView.setAdapter(adapter);

                    listRecyclerView.post(new Runnable() {
                        @Override
                        public void run() {
                            listRecyclerView.setRefreshing(false);
                        }
                    });
                }
            }

            @Override
            public void onFailure(HttpException e, String s) {

            }

        });//http 请求


        /*data = new ArrayList<>();
        for(int i=0;i<4;i++){
            data.add(new PtCustomer());
        }*/
        /*adapter.setCustomLoadMoreView(LayoutInflater.from(this)
                .inflate(R.layout.custom_bottom_progressbar, null));*/
    }//end initData

    private void parsePtCustomers(String result) {
        if(data == null){
            data = new ArrayList<>();
        }
        try {
            JSONObject jsonObject = new JSONObject(result);
            String status = jsonObject.getString("status");
            Log.i(LOG_TAG,"[返回的数据状态]"+status);
            if("Success".equals(status)){
                //成功返回
                String dataStr = jsonObject.getString("data");
                Log.i(LOG_TAG,"[返回的data]"+dataStr);
                if(dataStr != null && dataStr.length() > 0){
                    JSONObject obj = new JSONObject(dataStr);
                    int totalrows = obj.getInt("totalrows");//获取总数据条数
                    Log.i(LOG_TAG,"[返回的数据条数]"+totalrows);
                    if(totalrows > 0 ){
                        JSONArray arr =obj.getJSONArray("CusList");
                        for(int i=0;i<arr.length();i++){
                            JSONObject jobj = arr.getJSONObject(i);
                            data.add(parsePtCustomer(jobj));
                        }
                        if(totalrows > data.size()){
                            haveMore = true;
                            pageindex++;
                        }else{
                            haveMore = false;
                        }
                    }
                }
            }else{
                Toast.makeText(this,"解析出错"+jsonObject.getString("message"),Toast.LENGTH_SHORT).show();
            }
        } catch (JSONException e) {
            e.printStackTrace();
        }
    }

    private PtCustomer parsePtCustomer(JSONObject jobj) throws JSONException {
        PtCustomer customer = new PtCustomer();
        customer.setCustomerId(jobj.getInt("CustomerId") + "");
        customer.setCustomerInfoID(jobj.getInt("CustomerInfoID") + "");
        customer.setCustomerName(jobj.getString("CustomerName"));
        customer.setCustomerPhone(jobj.getString("CustomerPhone"));
        customer.setEmpName(jobj.getString("EmpName"));
        customer.setIntentLevel(jobj.getString("IntentLevel"));
        customer.setLastContratTime(jobj.getString("LastContratTime"));
        customer.setLastTalkProcess(jobj.getString("LastTalkProcess"));
        customer.setCarseriesName(jobj.getString("CarseriesName"));
        customer.setCarModelName(jobj.getString("CarModelName"));
        customer.setColorName(jobj.getString("ColorName"));
        customer.setSourceChannelName(jobj.getString("SourceChannelName"));
        customer.setTurnToIntroduce(jobj.getString("TurnToIntroduce"));
        customer.setOldCusCarNO(jobj.getString("OldCusCarNO"));
        customer.setOtherBrandName(jobj.getString("OtherBrandName"));
        customer.setOtherSeriesName(jobj.getString("OtherSeriesName"));
        customer.setFailType(jobj.getString("FailType"));
        customer.setPayType(jobj.getString("PayType"));
        customer.setLiveProvince(jobj.getString("LiveProvince"));
        customer.setLiveCity(jobj.getString("LiveCity"));
        customer.setLiveArea(jobj.getString("LiveArea"));
        customer.setChannelName(jobj.getString("ChannelName"));
        customer.setContactType(jobj.getString("ContactType"));
        customer.setUseageName(jobj.getString("UseageName"));
        customer.setFocusCarModel(jobj.getString("FocusCarModel"));
        customer.setNextCallTime(jobj.getString("NextCallTime"));
        return customer;
    }

    private String getNowDate(){
        Calendar cal=Calendar.getInstance();
        int y =cal.get(Calendar.YEAR);
        int m =cal.get(Calendar.MONTH)+1;
        int d =cal.get(Calendar.DATE);
        return y+"-"+m+"-"+d;
    }

    private void initView() {
        listRecyclerView = (UltimateRecyclerView) findViewById(R.id.activity_ptcustomers_rv_list);
        linearLayoutManager = new LinearLayoutManager(this);
        listRecyclerView.setLayoutManager(linearLayoutManager);
        listRecyclerView.enableLoadmore();
        listRecyclerView.setHasFixedSize(false);

        listRecyclerView.setOnLoadMoreListener(this);
        listRecyclerView.setDefaultOnRefreshListener(this);

       /* adapter = new PtCustomUltiRecycleAdapter();
        adapter.setCustomLoadMoreView(LayoutInflater.from(this)
                .inflate(R.layout.custom_bottom_progressbar, null));
        listRecyclerView.setAdapter(adapter);*/

        filterTextView = (TextView) findViewById(R.id.activtiy_clue_tv_filter);
        filterTextView.setOnClickListener(this);
    }//end initView

    @Override
    public void onClick(View v) {
        switch (v.getId()){
            case R.id.activtiy_clue_tv_filter://点击筛选按钮
                Intent intent = new Intent();
                intent.setClass(this,PtCustomersFilterActivity.class);
                startActivityForResult(intent,FILTER_REQUEST_CODE);
                break;
        }//end switch
    }//end onclick

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        if(resultCode == RESULT_OK){
            switch (requestCode){
                case FILTER_REQUEST_CODE:
                    if(data.getStringExtra("name") == null){
                        name = data.getStringExtra("name");
                    }else{
                        name = "";
                    }
                    if(data.getStringExtra("phone") == null){
                        phone = data.getStringExtra("phone");
                    }else{
                        phone = "";
                    }

                    break;
            }
        }
    }

    @Override
    public void loadMore(int itemsCount, int maxLastVisiblePosition) {
        Log.i(LOG_TAG,"[上拉加载更多]");
        if(adapter !=null){
            if(haveMore){
                Log.i(LOG_TAG,"[还有更多的数据]");
                adapter.setCustomLoadMoreView(LayoutInflater.from(this)
                        .inflate(R.layout.custom_bottom_progressbar, null));
                loadMoreData();
            }else{
                Log.i(LOG_TAG, "[没有更多的数据了]");
                TextView textView = new TextView(this);
                textView.setText("没有更多的数据了");
                adapter.setCustomLoadMoreView(textView);
            }
        }
    }//end loadMore

    private void loadMoreData() {
        HttpUtils httpUtils = HttpUtilsHelper.getInstance();
        RequestParams requestParams = XutilsRequest.getPcvList(empid, "", "", "",
                begintime, endtime,
                String.valueOf(pageindex), String.valueOf(pagesize));
        httpUtils.send(HttpRequest.HttpMethod.POST, UrlData.PCVLIST_URL, requestParams, new RequestCallBack<String>() {
            @Override
            public void onSuccess(ResponseInfo<String> responseInfo) {
                String result = responseInfo.result;
                Log.i(LOG_TAG,"[result]"+result);
                if(result != null && result.length() > 0){
                    parsePtCustomers(result);
                    Log.i(LOG_TAG, "[解析完的数据]" + data.size() + "  --> " + data);
                   // adapter = new PtCustomUltiRecycleAdapter(data);
                    listRecyclerView.setAdapter(adapter);
                }
            }

            @Override
            public void onFailure(HttpException e, String s) {

            }

        });//http 请求
    }


    //下拉刷新的时候
    @Override
    public void onRefresh() {
        initData();
    }
}


