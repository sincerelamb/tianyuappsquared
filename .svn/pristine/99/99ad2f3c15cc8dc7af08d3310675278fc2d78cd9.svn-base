package com.tygas.tianyu.tianyu.utils;

import android.util.Log;

import com.lidroid.xutils.http.RequestParams;

import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.Map;
import java.util.Set;

/**
 * Created by SJTY_YX on 2016/1/20.
 */
public class XutilsRequest {

    private static final String PC = "BQ2015";
    private static final String KEY = "zAt3B&#i&AcdWnHg";

    //获取到登录的参数
    public static RequestParams getLoginParams(String username,String password){
        RequestParams requestParams = new RequestParams();
        String ts = String.valueOf(System.currentTimeMillis());
        String data = "{\"user\":\""+username+"\",\"pw\":\""+sha1Code(password)+"\"}";
        String sign = getLoginSign(PC,ts,data,KEY);
        requestParams.addBodyParameter("pc",PC);
        requestParams.addBodyParameter("sign",sign);
        requestParams.addBodyParameter("ts",ts);
        requestParams.addBodyParameter("data",data);
        return requestParams;
    }

    //获取到意向客户的参数
    public static RequestParams getPvcList(){
        return null;
    }

    private static String getJsonFromMap(Map<String,String> data){
        String result = "{";
        Set<Map.Entry<String, String>> entries = data.entrySet();
        for(Map.Entry<String,String> entry : entries){
            result += "\""+entry.getKey()+"\":"+"\""+entry.getValue()+"\",";
        }
        result = result.endsWith(",")? result.substring(0,result.length()-1) : result;
        return result+"}";
    }

    private static String getLoginSign(String pc,String time,String data,String key){
        StringBuffer sb = new StringBuffer();
        sb.append("login");
        sb.append(pc);
        sb.append(time);
        sb.append(data);
        sb.append(key);
        return md5Code(sb.toString()).toUpperCase();
    }

    private static String md5Code(String before){
        try {
            MessageDigest digest = MessageDigest.getInstance("MD5");
            byte[] hash = digest.digest(before.getBytes());
            StringBuilder hex = new StringBuilder();
            for (byte b : hash) {
                if ((b & 0xFF) < 0x10) hex.append("0");
                hex.append(Integer.toHexString(b & 0xFF));
            }

            return hex.toString();

        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
        }
        return null;
    }

    private static String sha1Code(String before){
        try {
            MessageDigest digest = MessageDigest.getInstance("SHA-1");
            byte[] hash = digest.digest(before.getBytes());
            StringBuilder hex = new StringBuilder();
            for (byte b : hash) {
                if ((b & 0xFF) < 0x10) hex.append("0");
                hex.append(Integer.toHexString(b & 0xFF));
            }
            return hex.toString();
        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
        }
        return null;
    }

}
