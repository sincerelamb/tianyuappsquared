package com.tygas.tianyu.tianyu.ui.view.activity;

import android.graphics.Color;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.util.Log;
import android.view.View;
import android.widget.CheckBox;
import android.widget.CompoundButton;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import com.lidroid.xutils.HttpUtils;
import com.lidroid.xutils.exception.HttpException;
import com.lidroid.xutils.http.RequestParams;
import com.lidroid.xutils.http.ResponseInfo;
import com.lidroid.xutils.http.callback.RequestCallBack;
import com.lidroid.xutils.http.client.HttpRequest;
import com.tygas.tianyu.tianyu.R;
import com.tygas.tianyu.tianyu.context.MyAppCollection;
import com.tygas.tianyu.tianyu.data.UrlData;
import com.tygas.tianyu.tianyu.ui.model.FirstProtect;
import com.tygas.tianyu.tianyu.ui.model.User;
import com.tygas.tianyu.tianyu.utils.HttpUtilsHelper;
import com.tygas.tianyu.tianyu.utils.ProgressDialogHelper;
import com.tygas.tianyu.tianyu.utils.XutilsRequest;
import com.wdullaer.materialdatetimepicker.date.DatePickerDialog;
import com.wdullaer.materialdatetimepicker.time.RadialPickerLayout;
import com.wdullaer.materialdatetimepicker.time.TimePickerDialog;

import java.util.ArrayList;
import java.util.Calendar;


/**
 * Created by SJTY_YX on 2016/3/2.
 * 播出成功
 *
 */
public class FirstProjectCallOutSuccessActivity extends AppCompatActivity implements View.OnClickListener, CompoundButton.OnCheckedChangeListener, DatePickerDialog.OnDateSetListener {

    private ImageView saveImageView;//保存按钮
    private ImageView playImageView;//播放录音的按钮
    private CheckBox inviteCheckBox;//再次邀约
    private EditText inviteDateEditText;//再次邀约日期

    private CheckBox upkeepCheckBox;//已保养
    private EditText upkeepTimeEditText;//保养日期
    private EditText upkeepMilTextView;//保养里程

    private CheckBox lostCustomerCheckBox;//流失客户
    private EditText lostReasonEditText;//流失原因

    private CheckBox inviteSuccessCheckBox;//邀约成功
    private TextView comeingtimeTextView;//邀约进厂时间
    private TextView lastComeingTimeTextView;//最迟进厂时间
    private EditText asEditText;//预约服务顾问

    private DatePickerDialog datePickerDialog;
    private TimePickerDialog timePickerDialog;
    private View upkeepView;

    private EditText talkProcessEditText;//洽谈记录

    private User user;
    private FirstProtect firstProtect;
    private String path;
    private static final String LOG_TAG = "FirstProjectCallOutSuccessActivity";
    private static final int CANUSE_COLOR = Color.WHITE;
    private static final int DONTUSER_COLOR = Color.rgb(221,221,221);

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_calloutsuccess);
        MyAppCollection myAppCollection = (MyAppCollection) getApplication();
        if(myAppCollection.getUser() == null){
            finish();
        }
        user = myAppCollection.getUser();
        firstProtect = (FirstProtect) getIntent().getSerializableExtra("data");
        path = getIntent().getStringExtra("path");
        initView();
    }//end oncreate

    private void initView() {
        saveImageView = (ImageView) findViewById(R.id.activity_calloutsuccess_save);
        saveImageView.setOnClickListener(this);
        playImageView = (ImageView) findViewById(R.id.activity_calloutsuccess_iv_playIcon);
        playImageView.setOnClickListener(this);

        inviteCheckBox = (CheckBox) findViewById(R.id.activity_calloutsuccess_cb_invite);
        inviteCheckBox.setOnCheckedChangeListener(this);
        inviteDateEditText = (EditText) findViewById(R.id.activity_calloutsuccess_et_invitetime);

        upkeepCheckBox = (CheckBox) findViewById(R.id.activity_calloutsuccess_cb_upkeep);
        upkeepCheckBox.setOnCheckedChangeListener(this);
        upkeepTimeEditText = (EditText) findViewById(R.id.activity_calloutsuccess_et_upkeeptime);
        upkeepMilTextView = (EditText) findViewById(R.id.activity_calloutsucces_et_mil);

        lostCustomerCheckBox = (CheckBox) findViewById(R.id.activity_calloutsucces_cb_lostcusotmer);
        lostCustomerCheckBox.setOnCheckedChangeListener(this);
        lostReasonEditText = (EditText) findViewById(R.id.activity_calloutsucces_et_lostreason);

        inviteSuccessCheckBox = (CheckBox) findViewById(R.id.activity_calloutsuccess_cb_invitesuccess);
        inviteSuccessCheckBox.setOnCheckedChangeListener(this);

        comeingtimeTextView = (TextView) findViewById(R.id.activity_calloutsucces_tv_comeintime);
        lastComeingTimeTextView = (TextView) findViewById(R.id.activity_calloutsuccess_tv_lastcometime);
        comeingtimeTextView.setOnClickListener(this);
        lastComeingTimeTextView.setOnClickListener(this);

        asEditText = (EditText) findViewById(R.id.activity_calloutsuccess_et_sa);

        upkeepView = findViewById(R.id.activity_calloutsuccess_v_upkepptime);

        Calendar calendar = Calendar.getInstance();
        int y = calendar.get(Calendar.YEAR);
        int m = calendar.get(Calendar.MONTH);
        int d = calendar.get(Calendar.DAY_OF_MONTH);
        datePickerDialog = DatePickerDialog.newInstance(this,y,m,d);
        datePickerDialog.setAccentColor(Color.rgb(50, 126, 202));//327ECA

        talkProcessEditText = (EditText) findViewById(R.id.activity_calloutsuccesset_talkprocess);

    }//end initview

    @Override
    public void onClick(View v) {
        switch (v.getId()){
            case R.id.activity_calloutsuccess_save://点击了保存
                saveToNet();
                break;
            case R.id.activity_calloutsuccess_iv_playIcon://点击了播放
                break;
            case R.id.activity_calloutsucces_tv_comeintime://邀约进厂时间
                if(inviteSuccessCheckBox.isChecked())
                    datePickerDialog.show(getFragmentManager(), "comeintime");
                break;
            case R.id.activity_calloutsuccess_tv_lastcometime://最迟进厂时间
                if(inviteSuccessCheckBox.isChecked())
                    datePickerDialog.show(getFragmentManager(), "lastcometime");
                break;
        }
    }//end onClick


    //上传基本数据
    private void saveToNet() {
        RequestParams requestParams = getRequestParams();
        if(requestParams == null){
            Toast.makeText(this,"请选择拨出结果",Toast.LENGTH_SHORT).show();
        }else{
            ProgressDialogHelper.showProgressDialog(this,"数据提交中..");
            //提交到网络
            HttpUtils httpUtils = HttpUtilsHelper.getInstance();
            httpUtils.send(HttpRequest.HttpMethod.POST, UrlData.FIRST_ISSHOURESULT_URL, requestParams, new RequestCallBack<String>() {
                @Override
                public void onSuccess(ResponseInfo<String> responseInfo) {
                    ProgressDialogHelper.dismissProgressDialog();
                    Log.i(LOG_TAG,"服务器返回的数据"+responseInfo.result);
                }

                @Override
                public void onFailure(HttpException e, String s) {
                    ProgressDialogHelper.dismissProgressDialog();
                }
            });
        }
    }//end saveToNet

    /**
     *
     * 得到请求的参数
     * @return
     */
    private RequestParams getRequestParams() {

        String perdictFitDate = "2016-03-08";
        String frameNum = "***MCUBH2FT104535";

        if (inviteCheckBox.isChecked()){
            //再次邀约
            return XutilsRequest.getFirstProjectCallSuccess(frameNum,"true",talkProcessEditText.getText().toString(),
                                                            "1",inviteDateEditText.getText().toString(),
                                                            "0","","",
                                                            "0","",
                                                            "0","","","","",
                                                            user.getEmpId(), "首保",perdictFitDate);
        }else if(upkeepCheckBox.isChecked()){
            //已保养
            return XutilsRequest.getFirstProjectCallSuccess(frameNum,"true",talkProcessEditText.getText().toString(),
                                                            "0","",
                                                            "1",upkeepMilTextView.getText().toString(),upkeepTimeEditText.getText().toString(),
                                                            "0","",
                                                            "0","","","","",
                                                            user.getEmpId(),"首保",perdictFitDate);
        }else if(lostCustomerCheckBox.isChecked()){
            //客户流失
            return XutilsRequest.getFirstProjectCallSuccess(frameNum,"true",talkProcessEditText.getText().toString(),
                                                            "0","",
                                                            "0","","",
                                                            "1",lostReasonEditText.getText().toString(),
                                                            "0","","","","",
                                                            user.getEmpId(),"首保",perdictFitDate);
        }else if(inviteSuccessCheckBox.isChecked()){
            //邀约成功
            return XutilsRequest.getFirstProjectCallSuccess(frameNum,"true",talkProcessEditText.getText().toString(),
                                                            "0","",
                                                            "0","","",
                                                            "0","",
                                                            "1",comeingtimeTextView.getText().toString(),lastComeingTimeTextView.getText().toString(),"","",
                                                            user.getEmpId(),"首保",perdictFitDate);
        }
        return null;
    }

    @Override
    public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
        switch (buttonView.getId()){
            case R.id.activity_calloutsuccess_cb_invite://再次邀约
                Log.i(LOG_TAG, "再次邀约 " + isChecked);
                if(isChecked){
                    datePickerDialog.show(getFragmentManager(),"invite");
                    ((View)inviteDateEditText.getParent()).setBackgroundColor(CANUSE_COLOR);
                }else{
                    inviteDateEditText.setText("");
                    ((View)inviteDateEditText.getParent()).setBackgroundColor(DONTUSER_COLOR);
                }
                break;
            case R.id.activity_calloutsuccess_cb_upkeep://已保养
                Log.i(LOG_TAG,"已保养 "+isChecked);
                if(isChecked){
                    datePickerDialog.show(getFragmentManager(), "upkeep");
                    ((View)upkeepTimeEditText.getParent()).setBackgroundColor(CANUSE_COLOR);
                    ((View)upkeepMilTextView.getParent()).setBackgroundColor(CANUSE_COLOR);
                    upkeepMilTextView.setFocusable(true);
                    upkeepMilTextView.setFocusableInTouchMode(true);
                }else{
                    upkeepTimeEditText.setText("");
                    upkeepMilTextView.setText("");
                    upkeepMilTextView.setFocusable(false);
                    ((View)upkeepTimeEditText.getParent()).setBackgroundColor(DONTUSER_COLOR);
                    ((View)upkeepMilTextView.getParent()).setBackgroundColor(DONTUSER_COLOR);
                }
                break;
            case R.id.activity_calloutsucces_cb_lostcusotmer://流失客户
                Log.i(LOG_TAG,"流失客户 "+isChecked);
                if(isChecked){
                    ((View)lostReasonEditText.getParent()).setBackgroundColor(CANUSE_COLOR);
                    lostReasonEditText.setFocusable(true);
                    lostReasonEditText.setFocusableInTouchMode(true);
                }else{
                    lostReasonEditText.setText("");
                    lostReasonEditText.setFocusable(false);
                    ((View)lostReasonEditText.getParent()).setBackgroundColor(DONTUSER_COLOR);
                }
                break;
            case R.id.activity_calloutsuccess_cb_invitesuccess://成功邀约
                Log.i(LOG_TAG, "成功邀约 " + isChecked);
                if(isChecked){
                    ((View)comeingtimeTextView.getParent()).setBackgroundColor(CANUSE_COLOR);
                    ((View)lastComeingTimeTextView.getParent()).setBackgroundColor(CANUSE_COLOR);
                    ((View)asEditText.getParent()).setBackgroundColor(CANUSE_COLOR);
                    asEditText.setFocusable(true);
                    asEditText.setFocusableInTouchMode(true);
                }else{
                    ((View)comeingtimeTextView.getParent()).setBackgroundColor(DONTUSER_COLOR);
                    ((View)lastComeingTimeTextView.getParent()).setBackgroundColor(DONTUSER_COLOR);
                    ((View)asEditText.getParent()).setBackgroundColor(DONTUSER_COLOR);
                    comeingtimeTextView.setText("邀约进厂时间");
                    lastComeingTimeTextView.setText("最迟进厂时间");
                    asEditText.setText("");
                    asEditText.setFocusable(false);
                }
                break;
        }
        clearCheckBox(buttonView,isChecked);
    }//end onCheckedChanged


    private void clearCheckBox(CompoundButton buttonView, boolean isChecked) {
        ArrayList<CheckBox> boxs = new ArrayList<>();
        boxs.add(inviteCheckBox);
        boxs.add(upkeepCheckBox);
        boxs.add(lostCustomerCheckBox);
        boxs.add(inviteSuccessCheckBox);
        for(int i=0;i<boxs.size();i++){
            boxs.get(i).setChecked(false);
        }
        for(int i=0;i<boxs.size();i++){
            if(boxs.get(i) == buttonView){
                if(isChecked){
                    boxs.get(i).setChecked(isChecked);
                }
            }
        }//end for
    }

    @Override
    public void onDateSet(DatePickerDialog view, final int year, final int monthOfYear, final int dayOfMonth){
        if(view.getTag().equals("invite")){
            inviteDateEditText.setText(year+"-"+(monthOfYear+1)+"-"+dayOfMonth);
        }else if(view.getTag().equals("upkeep")){
            upkeepTimeEditText.setText(year+"-"+(monthOfYear+1)+"-"+dayOfMonth);
        }else if(view.getTag().equals("comeintime")){//邀约进厂时间
            timePickerDialog = TimePickerDialog.newInstance(new TimePickerDialog.OnTimeSetListener() {
                @Override
                public void onTimeSet(RadialPickerLayout view, int hourOfDay, int minute, int second) {
                    String result = year+"-"+(monthOfYear+1)+"-"+dayOfMonth+" "+hourOfDay+":"+minute;
                    comeingtimeTextView.setText(result);
                }
            },12,12,true);
            timePickerDialog.setAccentColor(Color.rgb(50, 126, 202));
            timePickerDialog.show(getFragmentManager(), "comeintime");
        }else if(view.getTag().equals("lastcometime")){//最迟进厂时间
            timePickerDialog = TimePickerDialog.newInstance(new TimePickerDialog.OnTimeSetListener() {
                @Override
                public void onTimeSet(RadialPickerLayout view, int hourOfDay, int minute, int second) {
                    String result = year+"-"+(monthOfYear+1)+"-"+dayOfMonth+" "+hourOfDay+":"+minute;
                    lastComeingTimeTextView.setText(result);
                }
            },12,12,true);
            timePickerDialog.setAccentColor(Color.rgb(50, 126, 202));
            timePickerDialog.show(getFragmentManager(), "comeintime");
        }
    }//end onDateSet
}
